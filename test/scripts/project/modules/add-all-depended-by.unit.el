;; -*- lexical-binding: t -*-
(require 'buttercup)
(require 'lelde/test)
(require 'lelde/project/modules)

(describe "lelde/project/modules::modules-alist--add-all-depended-by"
  (let ((mods '((a :depended-by nil)
                (b :depended-by (a))
                (c :depended-by (b))
                (d :depended-by (c))))
        (sort-cb (lambda (a b) (string< (symbol-name a)(symbol-name b)))))
    (lelde/project/modules::modules-alist--add-all-depended-by mods)
    ;;(describe (ppp-sexp-to-string mods))
    (it "d"
      (should (equal (sort (plist-get (cdr (assq 'd mods)) :all-depended-by)
                           sort-cb)
                     (sort '(a b c)
                           sort-cb))))))

(describe "case 02"
  (let ((mods '(
                (lelde :depended-by nil)
                (lelde/project/depends :depended-by (lelde/project))
                (lelde/project/init :depended-by (lelde))
                (lelde/project/modules :depended-by (lelde/elconc lelde/stmax/emit/export))
                (lelde/project/update :depended-by (lelde/project/init lelde))
                (lelde/stmax/emit/export :depended-by (lelde/stmax/emit))
                (lelde/stmax/emit :depended-by (lelde/stmax lelde/project/update))
                (lelde/test/util :depended-by (lelde/test))
                (lelde/tinplate/util :depended-by (lelde/tinplate))
                (lelde/META :depended-by (lelde/tinplate lelde/test lelde/stmax lelde/rsc lelde/project lelde/init lelde/elconc lelde/cli lelde/tinplate/util lelde/test/util lelde/stmax/emit lelde/stmax/emit/export lelde/project/update lelde/project/modules lelde/project/init lelde/project/depends lelde))
                (lelde/cli :depended-by (lelde/tinplate lelde/stmax lelde/elconc lelde/project/update))
                (lelde/elconc :depended-by nil)
                (lelde/init :depended-by nil)
                (lelde/project :depended-by (lelde/tinplate lelde/test lelde/rsc lelde/elconc lelde/cli lelde/test/util lelde/stmax/emit lelde/stmax/emit/export lelde/project/update lelde/project/modules lelde/project/init))
                (lelde/rsc :depended-by (lelde/stmax/emit lelde/project/update lelde/project/init))
                (lelde/stmax :depended-by (lelde))
                (lelde/test :depended-by nil)
                (lelde/tinplate :depended-by (lelde/project/update))
                ))
        (sort-cb (lambda (a b) (string< (symbol-name a)(symbol-name b)))))
    (lelde/project/modules::modules-alist--add-all-depended-by mods)
    (describe (ppp-sexp-to-string mods))
    (it "check result"
      (should (memq 'lelde (plist-get (cdr (assq 'lelde/project/update mods)) :all-depended-by)))
      )
    ))
